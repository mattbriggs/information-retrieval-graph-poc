[{
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-clusters-workloads.md', href = 'concepts-clusters-workloads.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Services&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;core concepts&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;control plane&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;node pools&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;Kubernetes cluster&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;application workloads&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Node selectors&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Control plane&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;application deployment&#x27;}}', name = 'Core concepts', node_id = 'd96d76b6-6b38-4e0a-8fc3-6cda1ba2b6d6', node_type = 'content', summary = 'To find a node&#x27;s allocatable resources, run: ```kubectl kubectl describe node [NODE_NAME] ``` To maintain node performance and functionality, AKS reserves resources on each node. ### Node selectors In an AKS cluster with multiple node pools, you may need to tell the Kubernetes Scheduler which node pool to use for a given resource. [Kubernetes control plane and node components](media/concepts-clusters-workloads/control-plane-and-nodes.png) ## Control plane When you create an AKS cluster, a control plane is automatically created and configured. For more information about how to use multiple node pools in AKS, see [Create and manage multiple node pools for a cluster in AKS][use-multiple-node-pools]. An AKS cluster has at least one node, an Azure virtual machine (VM) that runs the Kubernetes node components and container runtime. If you need advanced configuration and control on your Kubernetes node container runtime and OS, you can deploy a self-managed cluster using [Cluster API Provider Azure][cluster-api-provider-azure]. ## Kubernetes cluster architecture A Kubernetes cluster is divided into two components: - *Control plane*: provides the core Kubernetes services and orchestration of application workloads.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Security', node_id = '48f6464d-fc30-48b2-8586-79c8d477bb52', node_type = 'toc')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-identity.md', href = 'concepts-identity.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Kubernetes RBAC&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;access control&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;Kubernetes role&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;Azure Active Directory&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;Azure Active Directory integration&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;service account&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;service accounts&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Azure RBAC&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;AKS cluster&#x27;}}', name = 'Access and identity', node_id = '04f1691c-97db-4c68-9006-9f9dafdc547f', node_type = 'content', summary = '## Azure role-based access control Azure role-based access control (RBAC) is an authorization system built on [Azure Resource Manager](../azure-resource-manager/management/overview.md) that provides fine-grained access management of Azure resources. | ### AKS cluster identity permissions The following permissions are used by the AKS cluster identity, which is created and associated with the AKS cluster. [Azure Active Directory integration with AKS clusters](media/concepts-identity/aad-integration.png) With Azure AD-integrated AKS clusters, you can grant users or groups access to Kubernetes resources within a namespace or across the cluster. - To get started with Azure RBAC for Kubernetes Authorization, see [Use Azure RBAC to authorize access within the Azure Kubernetes Service (AKS) Cluster](manage-azure-rbac.md). &lt;br&gt; Allows read/write access to most resources in a namespace (or cluster scope), including the ability to create roles and role bindings within the namespace. See how in [Control access to cluster resources using Kubernetes role-based access control and Azure Active Directory identities](azure-ad-rbac.md). | ### Additional cluster identity permissions When creating a cluster with specific attributes, you will need the following additional permissions for the cluster identity.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-network.md', href = 'concepts-network.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Azure CNI&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;IP address&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;load balancer&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;IP addresses&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;ingress controller&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;load balancers&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Services&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Network concepts&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;ingress controllers&#x27;}}', name = 'Networking', node_id = '4aaa59da-09f0-43ba-b4f7-942dda97a294', node_type = 'content', summary = 'While network security groups are better for AKS nodes, network policies are a more suited, cloud-native way to control the flow of traffic for pods. You can: * Let the Azure platform create and configure the virtual networks for you, or * Choose to deploy your AKS cluster into an existing virtual network subnet. * You can manually create and configure the virtual network resources and attach to those resources when you create your AKS cluster. You don&#x27;t need to manually configure network security group rules to filter traffic for pods in an AKS cluster. [Diagram showing Load Balancer traffic flow in an AKS cluster][aks-loadbalancer] For extra control and routing of the inbound traffic, you may instead use an [Ingress controller](#ingress-controllers). - *Azure Container Networking Interface (CNI)* networking The AKS cluster is connected to existing virtual network resources and configurations. ## Network security groups A network security group filters traffic for VMs like the AKS nodes.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-storage.md', href = 'concepts-storage.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Services&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;Storage options&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;persistent volume&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;volume claim&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;storage class&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;Persistent volumes&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Persistent volume claims&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;volume claims&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;storage classes&#x27;}}', name = 'Storage', node_id = '1b614481-efc3-4c56-8530-96a0eb28ba01', node_type = 'content', summary = 'The reclaim policy ensures that the underlying Azure Blob storage container is deleted when the persistent volume that used it is deleted. This article introduces the core concepts that provide storage to your applications in AKS: - [Volumes](#volumes) - [Persistent volumes](#persistent-volumes) - [Storage classes](#storage-classes) - [Persistent volume claims](#persistent-volume-claims) ! [Persistent volume claims in an Azure Kubernetes Services (AKS) cluster](media/concepts-storage/persistent-volume-claims.png) Once an available storage resource has been assigned to the pod requesting storage, PersistentVolume is *bound* to a PersistentVolumeClaim. If a pod is scheduled and requests currently unavailable storage, Kubernetes can create the underlying Azure Disk or Files storage and attach it to the pod. While some application workloads can use local, fast storage on unneeded, emptied nodes, others require storage that persists on more regular data volumes within the Azure platform. | | `azureblob-fuse-premium` | Uses Azure Premium storage to create an Azure Blob storage container and connect using BlobFuse. When you delete the pod and the persistent volume is no longer required, the reclaimPolicy controls the behavior of the underlying Azure storage resource.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-scale.md', href = 'concepts-scale.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;cluster autoscale&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;cluster autoscaler&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;pod autoscaler&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;Azure Container&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;Azure Container Instance&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;Azure Container Instances&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Scale applications&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Azure Container Instances connector&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Services&#x27;}}', name = 'Scale', node_id = 'b5964eb2-d961-4624-bdb2-97f8bc9d9740', node_type = 'content', summary = 'Deployments can scale across AKS and ACI and with no delay as cluster autoscaler deploys new nodes in your AKS cluster. ## Horizontal pod autoscaler Kubernetes uses the horizontal pod autoscaler (HPA) to monitor the resource demand and automatically scale the number of replicas. When this situation occurs, pods are scheduled to run on other nodes within the node pool, and the cluster autoscaler decreases the number of nodes. [Kubernetes cluster autoscaler](media/concepts-scale/cluster-autoscaler.png) Cluster autoscaler is typically used alongside the horizontal pod autoscaler. Kubernetes can then schedule pods that run as ACI instances through virtual nodes, not as pods on VM nodes directly in your AKS cluster. Your applications may experience some disruption as pods are scheduled on different nodes when the cluster autoscaler decreases the number of nodes. However, if your application needs to rapidly scale, the horizontal pod autoscaler may schedule more pods than can be provided by the existing compute resources in the node pool.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\node-auto-repair.md', href = 'node-auto-repair.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;worker nodes&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;health state&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;Azure VMs work&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;Node Autodrain&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;How AKS checks&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;service disruptions&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;AKS node autodrain&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;node pools&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;AKS cluster workloads&#x27;}}', name = 'Node auto-repair', node_id = 'd0abf12d-ca11-4641-917d-071a85ff0e45', node_type = 'content', summary = 'For [spot node pools][spot-node-pools], scheduled events may cause a *preempt* node event for the node. ## Node Autodrain [Scheduled Events][scheduled-events] can occur on the underlying virtual machines (VMs) in any of your node pools. The following table shows the node events, and the actions they cause for AKS node autodrain. If AKS finds multiple unhealthy nodes during a health check, each node is repaired individually before another repair begins. --- title: Automatically repairing Azure Kubernetes Service (AKS) nodes description: Learn about node auto-repair functionality, and how AKS fixes broken worker nodes. If AKS identifies an unhealthy node that remains unhealthy for 10 minutes, AKS takes the following actions: 1. In this document, you&#x27;ll learn how automatic node repair functionality behaves for both Windows and Linux nodes.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'article', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\gpu-multi-instance.md', href = 'gpu-multi-instance.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;Multi-instance GPU Node pool&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;schedule tasks&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;node pool&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;multi-instance GPU node pool&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;GPU Instance Profile&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;A100 GPU&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;Nvidia A100&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;GPU capability&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Nvidia A100 GPU&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;multi-instance GPU capability&#x27;}}', name = 'Multi-instance GPU Node pool', node_id = 'aaddfa4c-9353-4350-a48b-12657bf250ac', node_type = 'content', summary = '- Single Strategy The single strategy treats every GPU instance as a GPU. ## GPU Instance Profile GPU Instance Profiles define how a GPU will be partitioned. The following table shows the available GPU Instance Profile for the `Standard_ND96asr_v4`, the only instance type that supports the A100 GPU at this time. For more information on the Nvidia A100, follow [Nvidia A100 GPU][Nvidia A100 GPU]. This article will walk you through how to create a multi-instance GPU node pool on Azure Kubernetes Service clusters and schedule tasks. ## Create an AKS cluster To get started, create a resource group and an AKS cluster. The two strategies &quot;Single&quot; and &quot;Mixed&quot; won&#x27;t affect how you execute CPU workloads, but how GPU resources will be displayed.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'article', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\servicemesh-about.md', href = 'servicemesh-about.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;service mesh&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;service meshes&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;selection criteria&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;Selection criteria&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;application layer&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;infrastructure layer&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;traffic management&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Service Mesh&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;details service&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;Service Mesh Interface&#x27;}}', name = 'Service meshes', node_id = '2a4b44e0-eeea-4e30-ba19-367ff97a5d38', node_type = 'content', summary = '- [Istio][istio] - [Linkerd][linkerd] - [Consul Connect][consul] For more details on the service mesh landscape, see [Layer 5&#x27;s Service Mesh Landscape][service-mesh-landscape]. ## Selection criteria Before you select a service mesh, ensure that you understand your requirements and the reasons for installing a service mesh. --- title: About service meshes description: Obtain an overview of service meshes, supported scenarios, selection criteria, and next steps to explore. ** - All the additional components required to support the service mesh require additional resources like CPU and memory. Your application is decoupled from these operational capabilities and the service mesh moves them out of the application layer, and down to the infrastructure layer. If you have workloads that are very sensitive to latency or cannot provide the additional resources to cover the service mesh components, then re-consider. On successful test of canary release, remove conditional routing and phase gradually increasing % of all traffic to new service.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\concepts-sustainable-software-engineering.md', href = 'concepts-sustainable-software-engineering.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;software engineering&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;software engineering principles&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Services&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;carbon footprint&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;network travel&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;carbon emission&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Reduce network travel&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Increase resource utilization&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;Spot pools&#x27;}}', name = 'Sustainable software engineering', node_id = 'abbcc336-480c-41eb-948a-4844447f86f2', node_type = 'content', summary = '&gt; [!IMPORTANT] &gt; When considering changing the resources in your cluster, verify your [system pools][system-pools] have enough resources to maintain the stability of your cluster&#x27;s core system components. You can use [Azure Traffic Manager][azure-traffic-manager] to route traffic to the closest cluster and [proximity placement groups][proiximity-placement-groups] and reduce the distance between Azure resources. Use the [horizontal pod autoscaler][scale-horizontal] and the [cluster autoscaler][scale-auto] to scale your cluster automatically based on your configuration. ## Reduce network travel By reducing requests and responses travel distance to and from your cluster, you can reduce carbon emissions and electricity consumption by networking devices. * Spot pools For cases where a workload is tolerant to sudden interruptions or terminations, you can use [spot pools][spot-pools]. Control how your cluster scales to keep all your nodes running at a high utilization while staying in sync with changes to your cluster&#x27;s workload. --- title: Concepts - Sustainable software engineering in Azure Kubernetes Services (AKS) description: Learn about sustainable software engineering in Azure Kubernetes Service (AKS).')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\dapr-overview.md', href = 'dapr-overview.md', name = 'Dapr', node_id = 'd1bd2b42-03f7-42b7-8ab7-2e1dac0ab6cc', node_type = 'content')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'conceptual', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\../azure-arc/kubernetes/conceptual-gitops-flux2.md', href = '../azure-arc/kubernetes/conceptual-gitops-flux2.md', keywords = '{1: {&#x27;score rank&#x27;: 1, &#x27;keyword&#x27;: &#x27;GitOps Flux&#x27;}, 2: {&#x27;score rank&#x27;: 2, &#x27;keyword&#x27;: &#x27;Azure Kubernetes Service&#x27;}, 3: {&#x27;score rank&#x27;: 3, &#x27;keyword&#x27;: &#x27;Git repos&#x27;}, 4: {&#x27;score rank&#x27;: 4, &#x27;keyword&#x27;: &#x27;Kubernetes cluster&#x27;}, 5: {&#x27;score rank&#x27;: 5, &#x27;keyword&#x27;: &#x27;Flux configuration&#x27;}, 6: {&#x27;score rank&#x27;: 6, &#x27;keyword&#x27;: &#x27;Azure Arc-enabled Kubernetes cluster&#x27;}, 7: {&#x27;score rank&#x27;: 7, &#x27;keyword&#x27;: &#x27;Git repositories&#x27;}, 8: {&#x27;score rank&#x27;: 8, &#x27;keyword&#x27;: &#x27;Kubernetes clusters&#x27;}, 9: {&#x27;score rank&#x27;: 9, &#x27;keyword&#x27;: &#x27;Azure Arc-enabled Kubernetes clusters&#x27;}, 10: {&#x27;score rank&#x27;: 10, &#x27;keyword&#x27;: &#x27;Flux configurations&#x27;}}', name = 'GitOps', node_id = '9ed9c6ed-7de9-4129-9171-a9114702895e', node_type = 'content', summary = '## Flux cluster extension :::image type=&quot;content&quot; source=&quot;media/gitops/flux2-extension-install-arc.png&quot; alt-text=&quot;Diagram showing the installation of the Flux extension for Azure Arc-enabled Kubernetes cluster.&quot; Each `fluxConfigurations` resource in Azure will be associated in a Kubernetes cluster with one Flux `GitRepository` or `Bucket` custom resource and one or more `Kustomization` custom resources. ## Flux configurations :::image type=&quot;content&quot; source=&quot;media/gitops/flux2-config-install.png&quot; alt-text=&quot;Diagram showing the installation of a Flux configuration in an Azure Arc-enabled Kubernetes or Azure Kubernetes Service cluster.&quot; lightbox=&quot;media/gitops/flux2-extension-install-aks.png&quot;::: GitOps is enabled in an Azure Arc-enabled Kubernetes or AKS cluster as a `Microsoft.KubernetesConfiguration/extensions/microsoft.flux` [cluster extension](./conceptual-extensions.md) resource. * Creates `GitRepository` or `Bucket` custom resource and `Kustomization` custom resources from the information in the `FluxConfig` custom resource. * fluxconfig-agent: Responsible for watching Azure for new or updated `fluxConfigurations` resources, and for starting the associated Flux configuration in the cluster. * fluxconfig-controller: Watches the `fluxconfigs.clusterconfig.azure.com` custom resources and responds to changes with new or updated configuration of GitOps machinery in the cluster.')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Best practices', node_id = 'c93cd01f-52a5-4e59-b57d-bced1a8a60d8', node_type = 'toc')
}, {
    'a': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Concepts', node_id = 'f068ccb4-1352-4090-98f9-a1e0e17f4da2', node_type = 'toc'),
    'b': Node('content', content_type = 'None', filepath = 'C:\\git\\ms\\azure-docs-pr\\articles\\aks\\', href = 'None', name = 'Migrate to AKS', node_id = '1e285e7d-55d3-4cc2-a4b2-39cc052ab9c8', node_type = 'toc')
}]